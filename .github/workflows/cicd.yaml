name: KBOT-CICD

on: push

env:
  TARGETOS: linux
  TARGETARCH: amd64
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Lowercase REPO
        run: |
          echo "REPO=${REPO,,}" >> ${GITHUB_ENV}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Run test
        run: make test

      - name: Login to OCI Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build&Push image
        run: make image push clean TARGETARCH=${{ env.TARGETARCH }} REGISTRY="${{ env.REGISTRY }}/${{ env.REPO }}"

  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Lowercase REPO
        run: |
          echo "REPO=${REPO,,}" >> ${GITHUB_ENV}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Update Helm Chart
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '
                .image.registry=strenv(REGISTRY) |
                .image.repository=strenv(REPO) |
                .image.tag=strenv(VERSION) |
                .image.os=strenv(TARGETOS) |
                .image.arch=strenv(TARGETARCH)
              ' helm/values.yaml
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "Update version $VERSION"
          git push

      - name: Login to OCI Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pushing Helm Chart
        run: |
          REPO_OWNER=`echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'`
          # Create chart package 
          helm package helm --version "${VERSION}-${TARGETOS}-${TARGETARCH}"
          # Get packed chart file name
          PKG_NAME=`ls *.tgz`
          # Pushing helm package to OCI registry
          helm push ${PKG_NAME} oci://${REGISTRY}/${REPO_OWNER}/charts